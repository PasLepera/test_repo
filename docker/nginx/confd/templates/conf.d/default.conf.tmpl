upstream default_backend {
  server {{ getenv "PHP_BACKEND_ADDR" }}:{{ getenv "PHP_BACKEND_PORT" }};
}

server {
  listen   80 default_server;
  access_log  /var/log/nginx/access.log {{ getenv "ACCESS_LOG_FORMAT" }};
  root {{ getenv "APP_ROOT" }};

  proxy_set_header        X-Real-IP       $remote_addr;
  proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

  include conf.d/default_fastcgi;
  include conf.d/default.override;

  location = /favicon.ico {
      log_not_found off;
      access_log off;
  }

  location = /robots.txt {
      allow all;
      log_not_found off;
      access_log off;
  }

  # Very rarely should these ever be accessed outside of your lan
  location ~* \.(txt|log)$ {
      deny all;
  }

  location ~ \..*/.*\.php$ {
      return 403;
  }

  location ~ ^/sites/.*/private/ {
      return 403;
  }

  # Block access to "hidden" files and directories whose names begin with a
  # period. This includes directories used by version control systems such
  # as Subversion or Git to store control files.
  location ~ (^|/)\. {
      return 403;
  }

  location / {
      # try_files $uri @rewrite; # For Drupal <= 6
      try_files $uri /index.php?$query_string; # For Drupal >= 7
  }
  location @rewrite {
      rewrite ^/(.*)$ /index.php?q=$1;
  }

  # Don't allow direct access to PHP files in the vendor directory.
  location ~ /vendor/.*\.php$ {
      deny all;
      return 404;
  }
  # In Drupal 8, we must also match new paths where the '.php' appears in
  # the middle, such as update.php/selection. The rule we use is strict,
  # and only allows this pattern with the update.php front controller.
  # This allows legacy path aliases in the form of
  # blog/index.php/legacy-path to continue to route to Drupal nodes. If
  # you do not have any paths like that, then you might prefer to use a
  # laxer rule, such as:
  #   location ~ \.php(/|$) {
  # The laxer rule will continue to work if Drupal uses this new URL
  # pattern with front controllers other than update.php in a future
  # release.
  location ~ '\.php$|^/update.php' {
      fastcgi_pass default_backend;
  }

  # Fighting with Styles? This little gem is amazing.
  # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
  location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
      try_files $uri @rewrite;
  }

  # Handle private files through Drupal. Private file's path can come
  # with a language prefix.
  location ~ ^(/[a-z\-]+)?/system/files/ { # For Drupal >= 7
      try_files $uri /index.php?$query_string;
  }

  location /nginx_status {
    stub_status on;
    access_log   off;
    allow 127.0.0.1;
    allow {{ getenv "NGINX_STATUS_ALLOW" }};
    deny {{ getenv "NGINX_STATUS_DENY" }};
  }

  location /fpmping {
    access_log   off;
    fastcgi_pass default_backend;
  }
}
